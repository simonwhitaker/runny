shell: /bin/bash
env:
  - FOO=fooster
  - BAR=barbara
commands:
  # Commands I use when developing runny
  clean:
    run: |
      go clean ./...
      rm -rf dist
  install-goreleaser:
    if: "! command -v goreleaser"
    run: brew install goreleaser/tap/goreleaser
  install-pre-commit:
    if: "! command -v pre-commit"
    run: brew install pre-commit
  install-fish-completions:
    # Homebrew installs these for you, but this is useful if you're installing with `go install .`
    run: ln -s $PWD/completions/runny.fish ~/.config/fish/completions
  release:
    argnames:
      - tag
    run: git tag -am $tag $tag && git push origin refs/tags/$tag
  release-next:
    run: |
      latest_version=$(git tag --list "v*" --sort "-refname" | head -1)
      next_version=$(echo ${latest_version} | awk -F. -v OFS=. '{$NF += 1 ; print}')
      printf "Release $next_version? (Current release is $latest_version) [yN] "
      read answer
      if [[ $answer =~ ^[Yy]$ ]]; then
        git tag -am $next_version $next_version && git push origin refs/tags/$next_version
      fi
  generate:
    run: go generate ./...
  test:
    run: go test ./...

  # Demo commands to showcase various features of runny
  demo-env:
    env:
      - FOO=baz
    run: echo $FOO $BAR
  demo-args:
    argnames:
      - aa
      - bb
    run: echo $aa is not $bb and $bb is not $aa
  demo-multiline-command:
    # Unlike Makefiles, runny makes it simple to run commands that span over multiple lines. Just write them exactly as
    # you would in a regular script.
    run: |
      for x in 1 2 3; do
        echo $x
      done
